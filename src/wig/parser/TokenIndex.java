/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.parser;

import wig.node.*;
import wig.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTService(TService node)
    {
        index = 0;
    }

    public void caseTConst(TConst node)
    {
        index = 1;
    }

    public void caseTHtml(THtml node)
    {
        index = 2;
    }

    public void caseTHtmlTagStart(THtmlTagStart node)
    {
        index = 3;
    }

    public void caseTHtmlTagEnd(THtmlTagEnd node)
    {
        index = 4;
    }

    public void caseTInput(TInput node)
    {
        index = 5;
    }

    public void caseTSelect(TSelect node)
    {
        index = 6;
    }

    public void caseTType(TType node)
    {
        index = 7;
    }

    public void caseTName(TName node)
    {
        index = 8;
    }

    public void caseTText(TText node)
    {
        index = 9;
    }

    public void caseTRadio(TRadio node)
    {
        index = 10;
    }

    public void caseTSchema(TSchema node)
    {
        index = 11;
    }

    public void caseTSession(TSession node)
    {
        index = 12;
    }

    public void caseTShow(TShow node)
    {
        index = 13;
    }

    public void caseTExit(TExit node)
    {
        index = 14;
    }

    public void caseTReturn(TReturn node)
    {
        index = 15;
    }

    public void caseTIf(TIf node)
    {
        index = 16;
    }

    public void caseTElse(TElse node)
    {
        index = 17;
    }

    public void caseTWhile(TWhile node)
    {
        index = 18;
    }

    public void caseTPlug(TPlug node)
    {
        index = 19;
    }

    public void caseTReceive(TReceive node)
    {
        index = 20;
    }

    public void caseTInt(TInt node)
    {
        index = 21;
    }

    public void caseTBool(TBool node)
    {
        index = 22;
    }

    public void caseTString(TString node)
    {
        index = 23;
    }

    public void caseTVoid(TVoid node)
    {
        index = 24;
    }

    public void caseTTuple(TTuple node)
    {
        index = 25;
    }

    public void caseTTrue(TTrue node)
    {
        index = 26;
    }

    public void caseTFalse(TFalse node)
    {
        index = 27;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 28;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 29;
    }

    public void caseTAssign(TAssign node)
    {
        index = 30;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 31;
    }

    public void caseTLt(TLt node)
    {
        index = 32;
    }

    public void caseTGt(TGt node)
    {
        index = 33;
    }

    public void caseTLtSlash(TLtSlash node)
    {
        index = 34;
    }

    public void caseTLtBracket(TLtBracket node)
    {
        index = 35;
    }

    public void caseTGtBracket(TGtBracket node)
    {
        index = 36;
    }

    public void caseTLPar(TLPar node)
    {
        index = 37;
    }

    public void caseTRPar(TRPar node)
    {
        index = 38;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 39;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 40;
    }

    public void caseTComma(TComma node)
    {
        index = 41;
    }

    public void caseTKeep(TKeep node)
    {
        index = 42;
    }

    public void caseTRemove(TRemove node)
    {
        index = 43;
    }

    public void caseTJoin(TJoin node)
    {
        index = 44;
    }

    public void caseTEq(TEq node)
    {
        index = 45;
    }

    public void caseTNeq(TNeq node)
    {
        index = 46;
    }

    public void caseTLteq(TLteq node)
    {
        index = 47;
    }

    public void caseTGteq(TGteq node)
    {
        index = 48;
    }

    public void caseTNot(TNot node)
    {
        index = 49;
    }

    public void caseTMinus(TMinus node)
    {
        index = 50;
    }

    public void caseTPlus(TPlus node)
    {
        index = 51;
    }

    public void caseTMult(TMult node)
    {
        index = 52;
    }

    public void caseTDiv(TDiv node)
    {
        index = 53;
    }

    public void caseTMod(TMod node)
    {
        index = 54;
    }

    public void caseTAnd(TAnd node)
    {
        index = 55;
    }

    public void caseTOr(TOr node)
    {
        index = 56;
    }

    public void caseTDot(TDot node)
    {
        index = 57;
    }

    public void caseTIdentifier(TIdentifier node)
    {
        index = 58;
    }

    public void caseTIntconst(TIntconst node)
    {
        index = 59;
    }

    public void caseTStringconst(TStringconst node)
    {
        index = 60;
    }

    public void caseTMeta(TMeta node)
    {
        index = 61;
    }

    public void caseTWhatever(TWhatever node)
    {
        index = 62;
    }

    public void caseEOF(EOF node)
    {
        index = 63;
    }
}
