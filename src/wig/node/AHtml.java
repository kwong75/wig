/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.node;

import java.util.*;
import wig.analysis.*;

public final class AHtml extends PHtml
{
    private TConst _const_;
    private THtml _html_;
    private TIdentifier _identifier_;
    private TAssign _assign_;
    private THtmlTagStart _htmlTagStart_;
    private final LinkedList _htmlbody_ = new TypedLinkedList(new Htmlbody_Cast());
    private THtmlTagEnd _htmlTagEnd_;
    private TSemicolon _semicolon_;

    public AHtml()
    {
    }

    public AHtml(
        TConst _const_,
        THtml _html_,
        TIdentifier _identifier_,
        TAssign _assign_,
        THtmlTagStart _htmlTagStart_,
        List _htmlbody_,
        THtmlTagEnd _htmlTagEnd_,
        TSemicolon _semicolon_)
    {
        setConst(_const_);

        setHtml(_html_);

        setIdentifier(_identifier_);

        setAssign(_assign_);

        setHtmlTagStart(_htmlTagStart_);

        {
            this._htmlbody_.clear();
            this._htmlbody_.addAll(_htmlbody_);
        }

        setHtmlTagEnd(_htmlTagEnd_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AHtml(
            (TConst) cloneNode(_const_),
            (THtml) cloneNode(_html_),
            (TIdentifier) cloneNode(_identifier_),
            (TAssign) cloneNode(_assign_),
            (THtmlTagStart) cloneNode(_htmlTagStart_),
            cloneList(_htmlbody_),
            (THtmlTagEnd) cloneNode(_htmlTagEnd_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHtml(this);
    }

    public TConst getConst()
    {
        return _const_;
    }

    public void setConst(TConst node)
    {
        if(_const_ != null)
        {
            _const_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _const_ = node;
    }

    public THtml getHtml()
    {
        return _html_;
    }

    public void setHtml(THtml node)
    {
        if(_html_ != null)
        {
            _html_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _html_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public TAssign getAssign()
    {
        return _assign_;
    }

    public void setAssign(TAssign node)
    {
        if(_assign_ != null)
        {
            _assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _assign_ = node;
    }

    public THtmlTagStart getHtmlTagStart()
    {
        return _htmlTagStart_;
    }

    public void setHtmlTagStart(THtmlTagStart node)
    {
        if(_htmlTagStart_ != null)
        {
            _htmlTagStart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _htmlTagStart_ = node;
    }

    public LinkedList getHtmlbody()
    {
        return _htmlbody_;
    }

    public void setHtmlbody(List list)
    {
        _htmlbody_.clear();
        _htmlbody_.addAll(list);
    }

    public THtmlTagEnd getHtmlTagEnd()
    {
        return _htmlTagEnd_;
    }

    public void setHtmlTagEnd(THtmlTagEnd node)
    {
        if(_htmlTagEnd_ != null)
        {
            _htmlTagEnd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _htmlTagEnd_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_const_)
            + toString(_html_)
            + toString(_identifier_)
            + toString(_assign_)
            + toString(_htmlTagStart_)
            + toString(_htmlbody_)
            + toString(_htmlTagEnd_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_const_ == child)
        {
            _const_ = null;
            return;
        }

        if(_html_ == child)
        {
            _html_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_assign_ == child)
        {
            _assign_ = null;
            return;
        }

        if(_htmlTagStart_ == child)
        {
            _htmlTagStart_ = null;
            return;
        }

        if(_htmlbody_.remove(child))
        {
            return;
        }

        if(_htmlTagEnd_ == child)
        {
            _htmlTagEnd_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_const_ == oldChild)
        {
            setConst((TConst) newChild);
            return;
        }

        if(_html_ == oldChild)
        {
            setHtml((THtml) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_assign_ == oldChild)
        {
            setAssign((TAssign) newChild);
            return;
        }

        if(_htmlTagStart_ == oldChild)
        {
            setHtmlTagStart((THtmlTagStart) newChild);
            return;
        }

        for(ListIterator i = _htmlbody_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(_htmlTagEnd_ == oldChild)
        {
            setHtmlTagEnd((THtmlTagEnd) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }

    private class Htmlbody_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PHtmlbody node = (PHtmlbody) o;

            if((node.parent() != null) &&
                (node.parent() != AHtml.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AHtml.this))
            {
                node.parent(AHtml.this);
            }

            return node;
        }
    }
}
