/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.node;

import java.util.*;
import wig.analysis.*;

public final class AInput extends PInput
{
    private PLvalue _lvalue_;
    private TAssign _assign_;
    private TIdentifier _identifier_;

    public AInput()
    {
    }

    public AInput(
        PLvalue _lvalue_,
        TAssign _assign_,
        TIdentifier _identifier_)
    {
        setLvalue(_lvalue_);

        setAssign(_assign_);

        setIdentifier(_identifier_);

    }
    public Object clone()
    {
        return new AInput(
            (PLvalue) cloneNode(_lvalue_),
            (TAssign) cloneNode(_assign_),
            (TIdentifier) cloneNode(_identifier_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAInput(this);
    }

    public PLvalue getLvalue()
    {
        return _lvalue_;
    }

    public void setLvalue(PLvalue node)
    {
        if(_lvalue_ != null)
        {
            _lvalue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lvalue_ = node;
    }

    public TAssign getAssign()
    {
        return _assign_;
    }

    public void setAssign(TAssign node)
    {
        if(_assign_ != null)
        {
            _assign_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _assign_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_lvalue_)
            + toString(_assign_)
            + toString(_identifier_);
    }

    void removeChild(Node child)
    {
        if(_lvalue_ == child)
        {
            _lvalue_ = null;
            return;
        }

        if(_assign_ == child)
        {
            _assign_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_lvalue_ == oldChild)
        {
            setLvalue((PLvalue) newChild);
            return;
        }

        if(_assign_ == oldChild)
        {
            setAssign((TAssign) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

    }
}
