/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.node;

import java.util.*;
import wig.analysis.*;

public final class AReceive extends PReceive
{
    private TReceive _receive_;
    private TLBracket _lBracket_;
    private PInputs _inputs_;
    private TRBracket _rBracket_;

    public AReceive()
    {
    }

    public AReceive(
        TReceive _receive_,
        TLBracket _lBracket_,
        PInputs _inputs_,
        TRBracket _rBracket_)
    {
        setReceive(_receive_);

        setLBracket(_lBracket_);

        setInputs(_inputs_);

        setRBracket(_rBracket_);

    }
    public Object clone()
    {
        return new AReceive(
            (TReceive) cloneNode(_receive_),
            (TLBracket) cloneNode(_lBracket_),
            (PInputs) cloneNode(_inputs_),
            (TRBracket) cloneNode(_rBracket_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAReceive(this);
    }

    public TReceive getReceive()
    {
        return _receive_;
    }

    public void setReceive(TReceive node)
    {
        if(_receive_ != null)
        {
            _receive_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _receive_ = node;
    }

    public TLBracket getLBracket()
    {
        return _lBracket_;
    }

    public void setLBracket(TLBracket node)
    {
        if(_lBracket_ != null)
        {
            _lBracket_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lBracket_ = node;
    }

    public PInputs getInputs()
    {
        return _inputs_;
    }

    public void setInputs(PInputs node)
    {
        if(_inputs_ != null)
        {
            _inputs_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _inputs_ = node;
    }

    public TRBracket getRBracket()
    {
        return _rBracket_;
    }

    public void setRBracket(TRBracket node)
    {
        if(_rBracket_ != null)
        {
            _rBracket_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rBracket_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_receive_)
            + toString(_lBracket_)
            + toString(_inputs_)
            + toString(_rBracket_);
    }

    void removeChild(Node child)
    {
        if(_receive_ == child)
        {
            _receive_ = null;
            return;
        }

        if(_lBracket_ == child)
        {
            _lBracket_ = null;
            return;
        }

        if(_inputs_ == child)
        {
            _inputs_ = null;
            return;
        }

        if(_rBracket_ == child)
        {
            _rBracket_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_receive_ == oldChild)
        {
            setReceive((TReceive) newChild);
            return;
        }

        if(_lBracket_ == oldChild)
        {
            setLBracket((TLBracket) newChild);
            return;
        }

        if(_inputs_ == oldChild)
        {
            setInputs((PInputs) newChild);
            return;
        }

        if(_rBracket_ == oldChild)
        {
            setRBracket((TRBracket) newChild);
            return;
        }

    }
}
