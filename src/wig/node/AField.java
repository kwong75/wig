/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.node;

import java.util.*;
import wig.analysis.*;

public final class AField extends PField
{
    private PSimpletype _simpletype_;
    private TIdentifier _identifier_;
    private TSemicolon _semicolon_;

    public AField()
    {
    }

    public AField(
        PSimpletype _simpletype_,
        TIdentifier _identifier_,
        TSemicolon _semicolon_)
    {
        setSimpletype(_simpletype_);

        setIdentifier(_identifier_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new AField(
            (PSimpletype) cloneNode(_simpletype_),
            (TIdentifier) cloneNode(_identifier_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAField(this);
    }

    public PSimpletype getSimpletype()
    {
        return _simpletype_;
    }

    public void setSimpletype(PSimpletype node)
    {
        if(_simpletype_ != null)
        {
            _simpletype_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _simpletype_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return _identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(_identifier_ != null)
        {
            _identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _identifier_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_simpletype_)
            + toString(_identifier_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_simpletype_ == child)
        {
            _simpletype_ = null;
            return;
        }

        if(_identifier_ == child)
        {
            _identifier_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_simpletype_ == oldChild)
        {
            setSimpletype((PSimpletype) newChild);
            return;
        }

        if(_identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
