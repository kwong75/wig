/* This file was generated by SableCC (http://www.sablecc.org/). */

package wig.analysis;

import java.util.*;
import wig.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAService(AService node)
    {
        defaultCase(node);
    }

    public void caseAHtml(AHtml node)
    {
        defaultCase(node);
    }

    public void caseATagStartHtmlbody(ATagStartHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseATagEndHtmlbody(ATagEndHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseAHoleHtmlbody(AHoleHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseAWhateverHtmlbody(AWhateverHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseAMetaHtmlbody(AMetaHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseAInputHtmlbody(AInputHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseASelectHtmlbody(ASelectHtmlbody node)
    {
        defaultCase(node);
    }

    public void caseANameInputattr(ANameInputattr node)
    {
        defaultCase(node);
    }

    public void caseATypeInputattr(ATypeInputattr node)
    {
        defaultCase(node);
    }

    public void caseAAttributeInputattr(AAttributeInputattr node)
    {
        defaultCase(node);
    }

    public void caseATextInputtype(ATextInputtype node)
    {
        defaultCase(node);
    }

    public void caseARadioInputtype(ARadioInputtype node)
    {
        defaultCase(node);
    }

    public void caseAAttrAttribute(AAttrAttribute node)
    {
        defaultCase(node);
    }

    public void caseAAssignAttribute(AAssignAttribute node)
    {
        defaultCase(node);
    }

    public void caseAIdAttr(AIdAttr node)
    {
        defaultCase(node);
    }

    public void caseAIntAttr(AIntAttr node)
    {
        defaultCase(node);
    }

    public void caseAStrAttr(AStrAttr node)
    {
        defaultCase(node);
    }

    public void caseASchema(ASchema node)
    {
        defaultCase(node);
    }

    public void caseAField(AField node)
    {
        defaultCase(node);
    }

    public void caseAVariable(AVariable node)
    {
        defaultCase(node);
    }

    public void caseAOneIdentifiers(AOneIdentifiers node)
    {
        defaultCase(node);
    }

    public void caseAManyIdentifiers(AManyIdentifiers node)
    {
        defaultCase(node);
    }

    public void caseAIntSimpletype(AIntSimpletype node)
    {
        defaultCase(node);
    }

    public void caseABoolSimpletype(ABoolSimpletype node)
    {
        defaultCase(node);
    }

    public void caseAStringSimpletype(AStringSimpletype node)
    {
        defaultCase(node);
    }

    public void caseAVoidSimpletype(AVoidSimpletype node)
    {
        defaultCase(node);
    }

    public void caseASimpleType(ASimpleType node)
    {
        defaultCase(node);
    }

    public void caseATupleType(ATupleType node)
    {
        defaultCase(node);
    }

    public void caseAFunction(AFunction node)
    {
        defaultCase(node);
    }

    public void caseAOneArguments(AOneArguments node)
    {
        defaultCase(node);
    }

    public void caseAManyArguments(AManyArguments node)
    {
        defaultCase(node);
    }

    public void caseAArgument(AArgument node)
    {
        defaultCase(node);
    }

    public void caseASession(ASession node)
    {
        defaultCase(node);
    }

    public void caseANoStm(ANoStm node)
    {
        defaultCase(node);
    }

    public void caseAShowStm(AShowStm node)
    {
        defaultCase(node);
    }

    public void caseAExitStm(AExitStm node)
    {
        defaultCase(node);
    }

    public void caseAReturnStm(AReturnStm node)
    {
        defaultCase(node);
    }

    public void caseARetexpStm(ARetexpStm node)
    {
        defaultCase(node);
    }

    public void caseAIfStm(AIfStm node)
    {
        defaultCase(node);
    }

    public void caseAIfelseStm(AIfelseStm node)
    {
        defaultCase(node);
    }

    public void caseAWhileStm(AWhileStm node)
    {
        defaultCase(node);
    }

    public void caseACompStm(ACompStm node)
    {
        defaultCase(node);
    }

    public void caseAExpStm(AExpStm node)
    {
        defaultCase(node);
    }

    public void caseANoStmNoShortIf(ANoStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAShowStmNoShortIf(AShowStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAExitStmNoShortIf(AExitStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAReturnStmNoShortIf(AReturnStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseARetexpStmNoShortIf(ARetexpStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAIfelseStmNoShortIf(AIfelseStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAWhileStmNoShortIf(AWhileStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseACompStmNoShortIf(ACompStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAExpStmNoShortIf(AExpStmNoShortIf node)
    {
        defaultCase(node);
    }

    public void caseAIdDocument(AIdDocument node)
    {
        defaultCase(node);
    }

    public void caseAPlugDocument(APlugDocument node)
    {
        defaultCase(node);
    }

    public void caseAReceive(AReceive node)
    {
        defaultCase(node);
    }

    public void caseACompoundstm(ACompoundstm node)
    {
        defaultCase(node);
    }

    public void caseAOnePlugs(AOnePlugs node)
    {
        defaultCase(node);
    }

    public void caseAManyPlugs(AManyPlugs node)
    {
        defaultCase(node);
    }

    public void caseAPlug(APlug node)
    {
        defaultCase(node);
    }

    public void caseAOneInputs(AOneInputs node)
    {
        defaultCase(node);
    }

    public void caseAManyInputs(AManyInputs node)
    {
        defaultCase(node);
    }

    public void caseAInput(AInput node)
    {
        defaultCase(node);
    }

    public void caseAAssignExp(AAssignExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultExp(ADefaultExp node)
    {
        defaultCase(node);
    }

    public void caseAOrOrExp(AOrOrExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultOrExp(ADefaultOrExp node)
    {
        defaultCase(node);
    }

    public void caseAAndAndExp(AAndAndExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultAndExp(ADefaultAndExp node)
    {
        defaultCase(node);
    }

    public void caseAEqCmpExp(AEqCmpExp node)
    {
        defaultCase(node);
    }

    public void caseANeqCmpExp(ANeqCmpExp node)
    {
        defaultCase(node);
    }

    public void caseALtCmpExp(ALtCmpExp node)
    {
        defaultCase(node);
    }

    public void caseAGtCmpExp(AGtCmpExp node)
    {
        defaultCase(node);
    }

    public void caseALteqCmpExp(ALteqCmpExp node)
    {
        defaultCase(node);
    }

    public void caseAGteqCmpExp(AGteqCmpExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultCmpExp(ADefaultCmpExp node)
    {
        defaultCase(node);
    }

    public void caseAPlusAddExp(APlusAddExp node)
    {
        defaultCase(node);
    }

    public void caseAMinusAddExp(AMinusAddExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultAddExp(ADefaultAddExp node)
    {
        defaultCase(node);
    }

    public void caseAMultMultExp(AMultMultExp node)
    {
        defaultCase(node);
    }

    public void caseADivMultExp(ADivMultExp node)
    {
        defaultCase(node);
    }

    public void caseAModMultExp(AModMultExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultMultExp(ADefaultMultExp node)
    {
        defaultCase(node);
    }

    public void caseAJoinJoinExp(AJoinJoinExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultJoinExp(ADefaultJoinExp node)
    {
        defaultCase(node);
    }

    public void caseAKeepTupleExp(AKeepTupleExp node)
    {
        defaultCase(node);
    }

    public void caseARemoveTupleExp(ARemoveTupleExp node)
    {
        defaultCase(node);
    }

    public void caseAKeepManyTupleExp(AKeepManyTupleExp node)
    {
        defaultCase(node);
    }

    public void caseARemoveManyTupleExp(ARemoveManyTupleExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultTupleExp(ADefaultTupleExp node)
    {
        defaultCase(node);
    }

    public void caseANotUnaryExp(ANotUnaryExp node)
    {
        defaultCase(node);
    }

    public void caseANegUnaryExp(ANegUnaryExp node)
    {
        defaultCase(node);
    }

    public void caseADefaultUnaryExp(ADefaultUnaryExp node)
    {
        defaultCase(node);
    }

    public void caseALvalueBaseExp(ALvalueBaseExp node)
    {
        defaultCase(node);
    }

    public void caseACallBaseExp(ACallBaseExp node)
    {
        defaultCase(node);
    }

    public void caseAIntBaseExp(AIntBaseExp node)
    {
        defaultCase(node);
    }

    public void caseATrueBaseExp(ATrueBaseExp node)
    {
        defaultCase(node);
    }

    public void caseAFalseBaseExp(AFalseBaseExp node)
    {
        defaultCase(node);
    }

    public void caseAStringBaseExp(AStringBaseExp node)
    {
        defaultCase(node);
    }

    public void caseATupleBaseExp(ATupleBaseExp node)
    {
        defaultCase(node);
    }

    public void caseAParenBaseExp(AParenBaseExp node)
    {
        defaultCase(node);
    }

    public void caseAOneExps(AOneExps node)
    {
        defaultCase(node);
    }

    public void caseAManyExps(AManyExps node)
    {
        defaultCase(node);
    }

    public void caseASimpleLvalue(ASimpleLvalue node)
    {
        defaultCase(node);
    }

    public void caseAQualifiedLvalue(AQualifiedLvalue node)
    {
        defaultCase(node);
    }

    public void caseAOneFieldvalues(AOneFieldvalues node)
    {
        defaultCase(node);
    }

    public void caseAManyFieldvalues(AManyFieldvalues node)
    {
        defaultCase(node);
    }

    public void caseAFieldvalue(AFieldvalue node)
    {
        defaultCase(node);
    }

    public void caseTEol(TEol node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTCommentline(TCommentline node)
    {
        defaultCase(node);
    }

    public void caseTCommentmulti(TCommentmulti node)
    {
        defaultCase(node);
    }

    public void caseTService(TService node)
    {
        defaultCase(node);
    }

    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    public void caseTHtml(THtml node)
    {
        defaultCase(node);
    }

    public void caseTHtmlTagStart(THtmlTagStart node)
    {
        defaultCase(node);
    }

    public void caseTHtmlTagEnd(THtmlTagEnd node)
    {
        defaultCase(node);
    }

    public void caseTInput(TInput node)
    {
        defaultCase(node);
    }

    public void caseTSelect(TSelect node)
    {
        defaultCase(node);
    }

    public void caseTType(TType node)
    {
        defaultCase(node);
    }

    public void caseTName(TName node)
    {
        defaultCase(node);
    }

    public void caseTText(TText node)
    {
        defaultCase(node);
    }

    public void caseTRadio(TRadio node)
    {
        defaultCase(node);
    }

    public void caseTSchema(TSchema node)
    {
        defaultCase(node);
    }

    public void caseTSession(TSession node)
    {
        defaultCase(node);
    }

    public void caseTShow(TShow node)
    {
        defaultCase(node);
    }

    public void caseTExit(TExit node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTPlug(TPlug node)
    {
        defaultCase(node);
    }

    public void caseTReceive(TReceive node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTBool(TBool node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    public void caseTTuple(TTuple node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTLtSlash(TLtSlash node)
    {
        defaultCase(node);
    }

    public void caseTLtBracket(TLtBracket node)
    {
        defaultCase(node);
    }

    public void caseTGtBracket(TGtBracket node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTKeep(TKeep node)
    {
        defaultCase(node);
    }

    public void caseTRemove(TRemove node)
    {
        defaultCase(node);
    }

    public void caseTJoin(TJoin node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTIntconst(TIntconst node)
    {
        defaultCase(node);
    }

    public void caseTStringconst(TStringconst node)
    {
        defaultCase(node);
    }

    public void caseTMeta(TMeta node)
    {
        defaultCase(node);
    }

    public void caseTWhatever(TWhatever node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
